function add(){
    console.log("I am the add function");
}
undefined
typeof add;
"function"
add();
VM104:2 I am the add function
undefined
console.log("Hello JS ");
VM223:1 Hello JS 
undefined
add(10,20);
VM104:2 I am the add function
undefined
add(1,2);
VM104:2 I am the add function
undefined
add();
VM104:2 I am the add function
undefined
add(10,20,30,40,50);
VM104:2 I am the add function
undefined
function add(){
    console.log("I am the add function");
    return 0 ;
}
undefined
add();
VM408:2 I am the add function
0
add(10,[90,100], true, 'Hello');
VM408:2 I am the add function
0
console.dir(add);
VM540:1 ƒ add()arguments: nullcaller: nulllength: 0name: "add"prototype: {constructor: ƒ}__proto__: ƒ ()[[FunctionLocation]]: VM408:1[[Scopes]]: Scopes[1]
undefined
function add(){
console.log('Arguments are ', arguments.length);
}
undefined
add(10,20,30,40,50);
VM675:2 Arguments are  5
undefined
add(10,20);
VM675:2 Arguments are  2
undefined
add(10,20,"Hello");
VM675:2 Arguments are  3
undefined
add(10,20,"Hello", [10,20]);
VM675:2 Arguments are  4
undefined
add(10,20,30,40,50);
VM675:2 Arguments are  5
undefined
function add(){
console.log('Arguments are ', arguments.length);
}
undefined
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=arguments[i];
}
return sum;
}
undefined
add(10,20);
VM921:2 Arguments are  2
30
add(10,20,30);
VM921:2 Arguments are  3
60
add(10,20,30,40);
VM921:2 Arguments are  4
100
add(10,20,30,40,50);
VM921:2 Arguments are  5
150
add();
VM921:2 Arguments are  0
0
add(10,20,"30")
VM921:2 Arguments are  3
"3030"
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=parseInt(arguments[i]);
}
return sum;
}
undefined
add(10,20,"30")
VM1108:2 Arguments are  3
60
parseInt("two")
NaN
NaN + 444
NaN
add(10,20,"30","two")
VM1108:2 Arguments are  4
NaN
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(10,20,"30","two")
VM1369:2 Arguments are  4
60
function two(){
return "2";
}
undefined
two();
"2"
two;
ƒ two(){
return "2";
}
add(10,20,"30","two", two);
VM1369:2 Arguments are  5
60
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(typeof arguments[i] === 'function'){
arguments[i] = arguments[i](); 
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);

}
return sum;
}
undefined
add(10,20,"30","two", two);
VM1630:2 Arguments are  5
62
add(10,20,"30","two", two,[1,2]);
VM1630:2 Arguments are  6
63
add(10,20,"30","two", two,[1,2,3]);
VM1630:2 Arguments are  6
63
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(typeof arguments[i] === 'function'){
arguments[i] = arguments[i](); 
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);

}
return sum;
}
undefined
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){
for(var j = 0; j<arguments[i].length; j++){
if(typeof arguments[i][j] === 'function'){
arguments[i][j] = arguments[i][j](); 
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
} // Array Loop Ends
} // Array if ends
else{
if(typeof arguments[i] === 'function'){
arguments[i] = arguments[i](); 
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);

}// Non Array else
} // Arguments Loop Ends
return sum;
}
undefined
add(1,"2",[3,4],two,"five",[6,two,"3"]);
VM1966:2 Arguments are  6
23
function add(){
console.log('Arguments are ', arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(arguments[i] instanceof Array){
for(var j = 0; j<arguments[i].length; j++){
if(typeof arguments[i][j] === 'function'){
arguments[i][j] = arguments[i][j](); 
}
sum+=isNaN(parseInt(arguments[i][j]))?0:parseInt(arguments[i][j]);
} // Array Loop Ends
} // Array if ends
else{
if(typeof arguments[i] === 'function'){
arguments[i] = arguments[i](); 
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);

}// Non Array else
} // Arguments Loop Ends
return sum;
}
undefined
function jQuery(){
console.log('JQuery Call ');
}
undefined
jQuery(window);
VM2182:2 JQuery Call 
undefined
jQuery("b1");
VM2182:2 JQuery Call 
undefined
jQuery([10,20]);
VM2182:2 JQuery Call 
undefined
var $ = jQuery;
undefined
$
ƒ jQuery(){
console.log('JQuery Call ');
}
$(window);
VM2182:2 JQuery Call 
undefined
$("#b1")
VM2182:2 JQuery Call 
undefined
console.dir(add);
VM2472:1 ƒ add()arguments: nullcaller: nulllength: 0name: "add"prototype: {constructor: ƒ}__proto__: ƒ ()[[FunctionLocation]]: VM2090:1[[Scopes]]: Scopes[1]
undefined
function add(...args){
console.log('Arguments are ', args.length);
var sum = 0;
for(var i = 0 ; i<args.length; i++){
if(args[i] instanceof Array){
for(var j = 0; j<args[i].length; j++){
if(typeof args[i][j] === 'function'){
args[i][j] = args[i][j](); 
}
sum+=isNaN(parseInt(args[i][j]))?0:parseInt(args[i][j]);
} // Array Loop Ends
} // Array if ends
else{
if(typeof args[i] === 'function'){
args[i] = args[i](); 
}
sum+=isNaN(parseInt(args[i]))?0:parseInt(args[i]);

}// Non Array else
} // Arguments Loop Ends
return sum;
}
undefined
add(1,"2",[3,4],two,"five",[6,two,"3"]);
VM2599:2 Arguments are  6
23
add;
ƒ add(...args){
console.log('Arguments are ', args.length);
var sum = 0;
for(var i = 0 ; i<args.length; i++){
if(args[i] instanceof Array){
for(var j = 0; j<args[i].length; j++){
if(typeof args[i][j] =…
function add(...args){
console.log('Arguments are ', args.length," ARGS ARE ", typeof arguments, typeof args);

console.log(arguments instanceof Array);
console.log(args instanceof Array);
var sum = 0;
for(var i = 0 ; i<args.length; i++){
if(args[i] instanceof Array){
for(var j = 0; j<args[i].length; j++){
if(typeof args[i][j] === 'function'){
args[i][j] = args[i][j](); 
}
sum+=isNaN(parseInt(args[i][j]))?0:parseInt(args[i][j]);
} // Array Loop Ends
} // Array if ends
else{
if(typeof args[i] === 'function'){
args[i] = args[i](); 
}
sum+=isNaN(parseInt(args[i]))?0:parseInt(args[i]);

}// Non Array else
} // Arguments Loop Ends
return sum;
}
undefined
add(1,"2",[3,4],two,"five",[6,two,"3"]);
VM3140:2 Arguments are  6  ARGS ARE  object object
VM3140:4 false
VM3140:5 true
23
function show(...a, b){

}
VM3201:1 Uncaught SyntaxError: Rest parameter must be last formal parameter
function show(b,...a){

}
undefined
function show(...b,...a){

}
VM3236:1 Uncaught SyntaxError: Rest parameter must be last formal parameter
var arr = [10,20];
undefined
var bb = [...arr];
undefined
var obj = {id:1001, name:'Ram',salary:9999};
undefined
var obj2 = {id:1002, name:}
VM3407:1 Uncaught SyntaxError: Unexpected token '}'
var obj2 = {id:1002, name:'Shyam'};
undefined
var obj2 = {id:1002, name:'Shyam', bonus:999, phone:88888};
undefined
var obj3 = {...obj, ...obj2}
undefined
obj3;
{id: 1002, name: "Shyam", salary: 9999, bonus: 999, phone: 88888}
var obj4 = {obj, obj2};
undefined
obj4;
{obj: {…}, obj2: {…}}obj: {id: 1001, name: "Ram", salary: 9999}obj2: {id: 1002, name: "Shyam", bonus: 999, phone: 88888}__proto__: Object
obj3.salary;
9999
obj4.obj.salary;
9999
var x = {id:1001, id:1002};
undefined
x;
{id: 1002}
